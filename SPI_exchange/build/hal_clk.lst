C51 COMPILER V9.03   HAL_CLK                                                               09/28/2014 17:29:52 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE HAL_CLK
OBJECT MODULE PLACED IN .\hal_clk.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE C:\Nordic Semiconductor\nRFgo SDK 2.3.0.10040\source_code\hal\nrf24le1\hal_
                    -clk.c OMF2 BROWSE MDU_R515 INCDIR(C:\Nordic Semiconductor\nRFgo SDK 2.3.0.10040\source_code\hal\nrf24l01p;C:\Nordic Semi
                    -conductor\nRFgo SDK 2.3.0.10040\source_code\hal\nrf24le1;C:\Nordic Semiconductor\nRFgo SDK 2.3.0.10040\source_code\compi
                    -ler\c51;C:\Nordic Semiconductor\nRFgo SDK 2.3.0.10040\source_code\compiler\common;C:\Nordic Semiconductor\nRFgo SDK 2.3.
                    -0.10040\source_code\hal\) DEBUG PRINT(.\build\hal_clk.lst) OBJECT(.\hal_clk.obj)

line level    source

   1          /* Copyright (c) 2009 Nordic Semiconductor. All Rights Reserved.
   2           *
   3           * The information contained herein is confidential property of Nordic
   4           * Semiconductor ASA.Terms and conditions of usage are described in detail
   5           * in NORDIC SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT.
   6           *
   7           * Licensees are granted free, non-transferable use of the information. NO
   8           * WARRENTY of ANY KIND is provided. This heading must NOT be removed from
   9           * the file.
  10           *
  11           * $LastChangedRevision: 2513 $
  12           */
  13          
  14          /** @file
  15           * @brief Implementation of hal_clk
  16           */
  17          
  18          #include "nrf24le1.h"
  19          #include <stdbool.h>
  20          #include "hal_clk.h"
  21          
  22          void hal_clk_regret_xosc16m_on(bool on)
  23          {
  24   1        if(on)
  25   1        {
  26   2          CLKCTRL = (CLKCTRL | 0x80U) & (uint8_t)~0x08U;   // & ~0x08 to prevent writing 1 to this bit
  27   2        }
  28   1        else
  29   1        {
  30   2          CLKCTRL = CLKCTRL & (uint8_t)~0x88U;            // & ~0x08 to prevent writing 1 to this bit
  31   2        }
  32   1      }
  33          
  34          void hal_clk_set_input(hal_clk_input_t input)
  35          {
  36   1        CLKCTRL = (CLKCTRL & (uint8_t)~0x48U) | ((input & 0x01U) << 6);
  37   1      }
  38          
  39          void hal_clk_set_16m_source(hal_clk_source_t source)
  40          {
  41   1        CLKCTRL = (CLKCTRL & (uint8_t)~0x38U) | ((source & 0x03U) << 4);
  42   1      }
  43          
  44          hal_clk_source_t hal_clk_get_16m_source(void)
  45          {
  46   1        hal_clk_source_t clock_source;
  47   1        if(CLKLFCTRL & (uint8_t)0x08U)
  48   1        {
  49   2          clock_source = HAL_CLK_XOSC16M;
  50   2        }
  51   1        else
C51 COMPILER V9.03   HAL_CLK                                                               09/28/2014 17:29:52 PAGE 2   

  52   1        {
  53   2          clock_source = HAL_CLK_RCOSC16M;
  54   2        }
  55   1      
  56   1        return clock_source;
  57   1      }
  58          
  59          void hal_clk_set_freq(hal_clk_freq_t freq)
  60          {
  61   1        CLKCTRL = ((CLKCTRL & (uint8_t)~0x0FU) | ((uint8_t)freq & 0x07U)); // & ~0x08 to prevent writing 1 to th
             -is bit
  62   1      }
  63          
  64          bool hal_clklf_phase(void)
  65          {
  66   1        return (bool)(CLKLFCTRL & 0x80U);
  67   1      }
  68          
  69          bool hal_clklf_ready(void)
  70          {
  71   1        return (bool)(CLKLFCTRL & 0x40U);
  72   1      }
  73          
  74          void hal_clklf_set_source(hal_clklf_source_t source)
  75          {
  76   1        CLKLFCTRL = (uint8_t)(CLKLFCTRL & (uint8_t)~0x07U) | (uint8_t)((uint8_t)source & (uint8_t)0x07U);
  77   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     94    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
